<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.my.task.TaskMapper">

	<!-- 메인 과제 리스트 가져오기 -->
	<select id="selectMainTaskList" resultType="TaskDTO"
		parameterType="java.util.HashMap">
		SELECT task_no, title, id, regdate, enddate
		FROM
		${tableName}
		WHERE enddate-SYSDATE&gt;=0
		ORDER BY enddate
	</select>

	<!-- 전체 과제 리스트 가져오기 -->
	<select id="selectAllTaskList" resultType="TaskDTO"
		parameterType="java.util.HashMap">
		SELECT t.task_no, t.id, t.title, t.regdate
		FROM ( SELECT rownum rn, a.*
		FROM (
		SELECT *
		FROM ${tableName}
		WHERE enddate-SYSDATE&lt;0
		ORDER BY
		regdate
		<if test="desc">DESC</if>
		) a
		) t
		WHERE rn BETWEEN #{start} AND #{end}
	</select>

	<!-- 전체 과제 개수 가져오기 -->
	<select id="selectAllTaskCount" resultType="Integer">
		SELECT COUNT(*) FROM
		${tableName} WHERE enddate-SYSDATE&lt;0
	</select>

	<!-- 완료한 과제 리스트 가져오기 -->
	<select id="selectCompleteTaskList" resultType="MemberTaskDTO"
		parameterType="java.util.HashMap">
		SELECT *
		FROM ( SELECT rownum rn, a.*
		FROM ( SELECT m.task_no,
		m.hwscore, t.id, t.title, m.submitdate
		FROM ${tableName1} m JOIN
		${tableName2} t ON
		(m.task_no=t.task_no)
		WHERE m.id=#{id}
		ORDER BY
		submitdate
		<if test="desc">DESC</if>
		) a
		) t
		WHERE rn BETWEEN #{start} AND #{end}
	</select>

	<!-- 완료한 과제 개수 가져오기 -->
	<select id="selectCompleteTaskCount" resultType="Integer"
		parameterType="java.util.HashMap">
		SELECT COUNT(*) FROM ${tableName} WHERE id=#{id}
	</select>

	<!-- 출제한 과제 리스트 가져오기 -->
	<select id="selectMyTaskList" resultType="TaskDTO"
		parameterType="java.util.HashMap">
		SELECT *
		FROM ( SELECT rownum rn, a.*
		FROM ( SELECT task_no, title,
		regdate,
		avg_reviewscore FROM ${tableName}
		WHERE id=#{id} AND enddate-SYSDATE&lt;0
		ORDER BY
		regdate
		<if test="desc">DESC</if>
		) a
		) t
		WHERE rn BETWEEN #{start} AND #{end}
	</select>

	<!-- 출제한 과제 개수 가져오기 -->
	<select id="selectMyTaskCount" resultType="Integer"
		parameterType="java.util.HashMap">
		SELECT COUNT(*) FROM ${tableName} WHERE id=#{id}
	</select>

	<!-- 과제 정보 가져오기 -->
	<select id="selectTaskInfo" resultType="TaskDTO"
		parameterType="java.util.HashMap">
		SELECT task_no, title, id, regdate
		FROM ${tableName}
		WHERE task_no=#{taskNo}
	</select>

	<!-- 과제 답안 가져오기 -->
	<select id="selectQuizAnswer" resultType="Integer"
		parameterType="java.util.HashMap">
		SELECT answer
		FROM ${tableName}
		WHERE task_no=#{taskNo}
		ORDER BY question_no
	</select>

	<!-- 팀원 답안 가져오기 -->
	<select id="selectMemberAnswer" resultType="Integer"
		parameterType="java.util.HashMap">
		SELECT answer
		FROM ${tableName}
		WHERE task_no=#{taskNo}
		AND id=#{id}
		ORDER BY question_no
	</select>

	<!-- 과제 점수 가져오기 -->
	<select id="selectMemberScore" resultType="Integer"
		parameterType="java.util.HashMap">
		SELECT hwscore FROM ${tableName}
		WHERE task_no=#{taskNo}
		AND id=#{id}
	</select>

	<!-- 과제 정보 업데이트하기 -->
	<update id="updateTask" parameterType="java.util.HashMap">
		UPDATE ${tableName}
		SET regdate=SYSDATE, enddate=TO_DATE(#{enddate}, 'yyyy-MM-dd'), title=#{title}
		WHERE task_no=#{taskNo}
	</update>
	
	<!-- 과제 답안 생성하기 -->
	<insert id="insertQuizAnswer" parameterType="java.util.HashMap">
		INSERT INTO ${tableName} (question_no, task_no, answer) VALUES (#{questionNo}, #{taskNo}, #{answer})
	</insert>
	
	<!-- 과제 답안 수정하기 -->
	<update id="updateQuizAnswer" parameterType="java.util.HashMap">
		UPDATE ${tableName} SET answer=#{answer} WHERE task_no=#{taskNo} AND question_no=#{questionNo}
	</update>
	
	<!-- 과제 답안 삭제하기 -->
	<delete id="deleteQuizAnswer" parameterType="java.util.HashMap">
		DELETE ${tableName} WHERE task_no=#{taskNo} AND question_no=#{questionNo}
	</delete>

</mapper>